version: '3.7'

services:
  # The n8n main instance (UI and API)
  n8n:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    environment:
      - N8N_HOST=n8n
      - N8N_PORT=5678
      - N8N_PROTOCOL=http
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8ndb
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=NsTMFGALt7RcCae2xOBY
      - NODE_ENV=production
      - WEBHOOK_URL=https://${SUBDOMAIN}.${DOMAIN_NAME}/
      - GENERIC_TIMEZONE=${GENERIC_TIMEZONE}
      - N8N_RUNNERS_ENABLED=true
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - OFFLOAD_MANUAL_EXECUTIONS_TO_WORKERS=true
      # This key must be defined in Dokploy's UI
      # - N8N_ENCRYPTION_KEY=your_secure_encryption_key
    depends_on:
      - redis
      - postgres
    volumes:
      - n8n_data:/home/node/.n8n
      - /local-files:/files
    
  # Redis service
  redis:
    image: redis:6
    container_name: redis
    restart: always
    volumes:
      - redis_data:/data

  # Postgres service
  postgres:
    image: postgres:15
    container_name: n8n-postgres
    restart: always
    environment:
      POSTGRES_USER: n8n
      POSTGRES_PASSWORD: NsTMFGALt7RcCae2xOBY
      POSTGRES_DB: n8ndb
    volumes:
      - pgdata:/var/lib/postgresql/data

  # n8n worker service
  n8n-worker:
    image: docker.n8n.io/n8nio/n8n
    restart: always
    command: worker
    depends_on:
      - redis
      - postgres
    environment:
      - EXECUTIONS_MODE=queue
      - QUEUE_BULL_REDIS_HOST=redis
      - QUEUE_BULL_REDIS_PORT=6379
      - DB_TYPE=postgresdb
      - DB_POSTGRESDB_HOST=postgres
      - DB_POSTGRESDB_PORT=5432
      - DB_POSTGRESDB_DATABASE=n8ndb
      - DB_POSTGRESDB_USER=n8n
      - DB_POSTGRESDB_PASSWORD=NsTMFGALt7RcCae2xOBY
      # This key must be defined in Dokploy's UI
      # - N8N_ENCRYPTION_KEY=your_secure_encryption_key
    
volumes:
  n8n_data:
  redis_data:
  pgdata:
